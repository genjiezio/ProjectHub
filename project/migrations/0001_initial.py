# Generated by Django 3.1.3 on 2020-11-24 21:54

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('teacher', '0001_initial'),
        ('student', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'Category',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(null=True)),
                ('terminate', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'Course',
            },
        ),
        migrations.CreateModel(
            name='Course_Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(max_length=128, null=True)),
                ('sender_character', models.CharField(max_length=10, null=True)),
                ('send_time', models.CharField(max_length=128, null=True)),
                ('content', models.TextField(null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.course')),
            ],
            options={
                'db_table': 'Course_Message',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('number', models.IntegerField(null=True)),
                ('grade', models.FloatField(null=True)),
                ('captain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.student')),
            ],
            options={
                'db_table': 'Group',
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'Label',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start', models.DateTimeField(default=django.utils.timezone.now)),
                ('deadline', models.DateTimeField(null=True)),
                ('description', models.TextField(null=True)),
                ('group_maxsize', models.IntegerField(null=True)),
                ('group_minsize', models.IntegerField(default=0)),
                ('index', models.IntegerField()),
                ('across', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.course')),
            ],
            options={
                'db_table': 'Project',
                'unique_together': {('name', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Teacher_Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.course')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teacher.teacher')),
            ],
            options={
                'db_table': 'Teacher_Course',
                'unique_together': {('teacher', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Student_Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('needConfirm', models.BooleanField(null=True)),
                ('secretMsg', models.CharField(max_length=128, null=True)),
                ('accepted', models.BooleanField(null=True)),
                ('read', models.BooleanField(default=False)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.course_message')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.student')),
            ],
            options={
                'db_table': 'Student_Message',
            },
        ),
        migrations.CreateModel(
            name='Student_Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(null=True)),
                ('proficiency', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.label')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.student')),
            ],
        ),
        migrations.CreateModel(
            name='Student_Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character', models.CharField(max_length=10)),
                ('lab', models.IntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.student')),
            ],
            options={
                'db_table': 'Student_Course',
                'unique_together': {('student', 'course', 'character')},
            },
        ),
        migrations.CreateModel(
            name='Project_Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.course')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.project')),
            ],
            options={
                'db_table': 'Project_Relation',
            },
        ),
        migrations.CreateModel(
            name='Project_Presentation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('duration', models.IntegerField()),
                ('index', models.IntegerField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.project')),
            ],
            options={
                'db_table': 'Project_Presentation',
            },
        ),
        migrations.CreateModel(
            name='Project_MarkSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('proportion', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.project')),
            ],
            options={
                'db_table': 'Project_MarkSheet',
            },
        ),
        migrations.CreateModel(
            name='Project_Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_path', models.CharField(max_length=100)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.project')),
            ],
            options={
                'db_table': 'Project_Document',
            },
        ),
        migrations.CreateModel(
            name='Project_Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.category')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.project')),
            ],
            options={
                'db_table': 'Project_Category',
                'unique_together': {('category', 'project')},
            },
        ),
        migrations.AddField(
            model_name='label',
            name='student',
            field=models.ManyToManyField(through='project.Student_Label', to='student.Student'),
        ),
        migrations.CreateModel(
            name='Group_Grades',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('comment', models.TextField(null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.group')),
                ('markSheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.project_marksheet')),
            ],
            options={
                'db_table': 'Group_Grades',
            },
        ),
        migrations.CreateModel(
            name='Group_File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=50)),
                ('file_path', models.CharField(max_length=500)),
                ('submission_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.group')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.student')),
            ],
            options={
                'db_table': 'Group_File',
            },
        ),
        migrations.AddField(
            model_name='group',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.project'),
        ),
        migrations.CreateModel(
            name='File_Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation', models.CharField(default='Upload', max_length=10)),
                ('op_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.group_file')),
                ('op_stu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.student')),
            ],
            options={
                'db_table': 'File_Log',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='student',
            field=models.ManyToManyField(through='project.Student_Course', to='student.Student'),
        ),
        migrations.AddField(
            model_name='course',
            name='teacher',
            field=models.ManyToManyField(through='project.Teacher_Course', to='teacher.Teacher'),
        ),
        migrations.AddField(
            model_name='category',
            name='project',
            field=models.ManyToManyField(through='project.Project_Category', to='project.Project'),
        ),
        migrations.CreateModel(
            name='Project_Student_Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.group')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.project')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.student')),
            ],
            options={
                'db_table': 'Project_Student_Group',
                'unique_together': {('project', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Project_Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.category')),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.label')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.project')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.student')),
            ],
            options={
                'db_table': 'Project_Label',
                'unique_together': {('student', 'project', 'label', 'category')},
            },
        ),
        migrations.CreateModel(
            name='Presentation_Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='project.group')),
                ('project_presentation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.project_presentation')),
            ],
            options={
                'db_table': 'Presentation_Schedule',
                'unique_together': {('start', 'end', 'group')},
            },
        ),
        migrations.CreateModel(
            name='Group_Desire_Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.group')),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.label')),
            ],
            options={
                'db_table': 'Group_Desire_Label',
                'unique_together': {('group', 'label')},
            },
        ),
    ]
